{"title":"R Tip of the Day","markdown":{"yaml":{"title":"R Tip of the Day","subtitle":"The Plotly Function (again)","author":"Ela Kanade","date":"May 13, 2025","format":{"revealjs":{"slide-number":true,"chalkboard":{"buttons":true},"preview-links":"auto"}},"editor_options":{"chunk_output_type":"console"}},"headingText":"What is Plotly anyways?","headingAttr":{"id":"","classes":[],"keyvalue":[["background-color","pink"]]},"containsRefs":false,"markdown":"\n\n```{r}\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(janitor)\nlibrary(sf)\nlibrary(maps)\n```\n\n\n::: incremental\n-   It is not only a library in R, but it is also a company which is super cool!\n-   Used for interactive visualizations that make understanding data easier and more fun (in my opinion).\n-   Python, R, Julia, JavaScript, Dash and other languages can use the Plotly library.\n:::\n\n## What can it do in R? {background-color=\"pink\"}\n\n::: incremental\n-   Creating interactive web-based graphs\n-   Integrates with ggplot2 via ggplotly().\n-   Works well with Shiny for building web apps (relevant for us!).\n-   You can also export to HTML for sharing.\n:::\n\n::: footer\nLearn more: [All about Plotly :)](https://en.wikipedia.org/wiki/Plotly)\n:::\n\n## The Data I Chose {background-color=\"pink\"}\n\n::: incremental\n-   This data is called *Hospitals*\n    -   It shows all the Hospitals by city in the US\n-   We can see how important this data is!\n    -   You can see which places in the US have more hospitals and which do not.\n    -   This data could be used in numerous different ways. It also shows whether or not the hospital is a non-profit, a rehabilitation center etc...\n:::\n\n## An Important Graph to See {background-color=\"pink\"}\n\n[![Click the map to take you to the original article.](images/FT_18.11.27_HospitalDistance_feature3.webp){width=\"1911\"}](https://www.pewresearch.org/short-reads/2018/12/12/how-far-americans-live-from-the-closest-hospital-differs-by-community-type/)\n\n## Let's get into some code! {background-color=\"pink\"}\n\nThe basic code for a Plotly map\n\n```{r}\n# Load and clean hospital dataset\nHospitals <- read_csv(\"~/Downloads/Hospitals.csv\")\n\n# Clean names (optional but helpful)\nHospitals <- Hospitals |> \n  clean_names()\n```\n\n```{r}\n# Convert latitude/longitude to numeric and filter out invalid rows\nhospitals <- Hospitals |> \n  mutate(\n    latitude = suppressWarnings(as.numeric(latitude)),\n    longitude = suppressWarnings(as.numeric(longitude))\n  ) |> \n  filter(!is.na(latitude), !is.na(longitude), !is.na(name))\n```\n\n``` {.r code-line-numbers=\"1-15\"}\n# Create interactive Plotly map\nplot_ly(\n  data = hospitals,\n  type = 'scattergeo',\n  mode = 'markers',\n  lat = ~latitude,\n  lon = ~longitude,\n  text = ~paste0(\"<b>\", name, \"</b><br>City: \", city, \n  \"<br>State: \", state, \n  \"</b><br>Type of Hospital: \", type),\n  marker = list(\n    size = 4,\n    color = 'red',\n    opacity = 0.6\n  )\n```\n\n## Let's get into some code! {background-color=\"pink\"}\n\nNow, we add in the layered part!\n\n``` {.r code-line-numbers=\"13-24\"}\n# Create interactive Plotly map\nplot_ly(\n  data = hospitals,\n  type = 'scattergeo',\n  mode = 'markers',\n  lat = ~latitude,\n  lon = ~longitude,\n  text = ~paste0(\"<b>\", name, \"</b><br>City: \", city, \"<br>State: \", state, \"</b><br>Type of Hospital: \", type),\n  marker = list(\n    size = 4,\n    color = 'red',\n    opacity = 0.6\n  ) |> \n  layout(\n    title = \"Interactive Map of U.S. Hospitals\",\n    geo = list(\n      scope = 'usa',\n      projection = list(type = 'albers usa'),\n      showland = TRUE,\n      landcolor = \"rgb(229, 229, 229)\",\n      subunitcolor = \"rgb(255, 255, 255)\",\n      countrycolor = \"rgb(255, 255, 255)\"\n    )\n  )\n```\n\n## The map we created {background-color=\"pink\"}\n\n```{r, height=2000, width=2000}\n# Create interactive Plotly map\nplot_ly(\n  data = hospitals,\n  type = 'scattergeo',\n  mode = 'markers',\n  lat = ~latitude,\n  lon = ~longitude,\n  text = ~paste0(\"<b>\", name, \"</b><br>City: \", city, \"<br>State: \", state, \"</b><br>Type of Hospital: \", type),\n  marker = list(\n    size = 4,\n    color = 'red',\n    opacity = 0.6\n  )\n) |> \n  layout(\n    title = \"Interactive Map of U.S. Hospitals\",\n    geo = list(\n      scope = 'usa',\n      projection = list(type = 'albers usa'),\n      showland = TRUE,\n      landcolor = \"rgb(229, 229, 229)\",\n      subunitcolor = \"rgb(255, 255, 255)\",\n      countrycolor = \"rgb(255, 255, 255)\"\n    )\n  )\n\n```\n\n## Another example woot woot! {background-color=\"pink\"}\n\nSo now we have the map function that we did previosly, but my next question is: **Which US States have the most hospitals?!** Let's find out.\n\n``` {.r code-line-numbers=\"1-24\"}\n# Plot the bar chart of top 10 states by hospital count\nplot_ly(\n  data = state_hospital_counts,\n  x = ~reorder(state, hospital_count),\n  y = ~hospital_count,\n  type = 'bar',\n  marker = list(color = 'steelblue')\n) |>\n  layout(\n    title = \"Top 10 U.S. States by Number of Hospitals\",\n    xaxis = list(title = \"State\"),\n    yaxis = list(title = \"Number of Hospitals\"),\n    margin = list(b = 100),\n    hovermode = \"closest\"\n  )\n```\n\n```{r}\n# Create a table of hospital counts per state (Top 10)\nstate_hospital_counts <- hospitals |>\n  count(state, name = \"hospital_count\") |>\n  arrange(desc(hospital_count)) |>\n  slice_head(n = 10)\n```\n\n## What it looks like {background-color=\"pink\"}\n\n```{r}\n# Plot the bar chart of top 10 states by hospital count\nplot_ly(\n  data = state_hospital_counts,\n  x = ~reorder(state, hospital_count),\n  y = ~hospital_count,\n  type = 'bar',\n  marker = list(color = 'steelblue')\n) |>\n  layout(\n    title = \"Top 10 U.S. States by Number of Hospitals\",\n    xaxis = list(title = \"State\"),\n    yaxis = list(title = \"Number of Hospitals\"),\n    margin = list(b = 100),\n    hovermode = \"closest\"\n  )\n```\n\n## Wrapping it up... {background-color=\"pink\"}\n\n::: incremental\n-   Plotly is used for making interactive maps and charts\n-   Tooltip :)\n    -   A function where we can hover over a map or a visualization and see some more details about it.\n    -   You can also isolate regions for better understanding and more information.\n-   Also, healthcare and the ability to get it in a quick manner saves lives!\n:::\n\n## Thank You! {background-color=\"pink\"}\n![Data + Healthcare = An Informed Public](images/kaiser_final_265dcf20bf86bc91590c49e978b05b5a.jpg){fig-align=\"center\" width=\"346\"}\n","srcMarkdownNoYaml":"\n\n```{r}\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(janitor)\nlibrary(sf)\nlibrary(maps)\n```\n\n## What is Plotly anyways? {background-color=\"pink\"}\n\n::: incremental\n-   It is not only a library in R, but it is also a company which is super cool!\n-   Used for interactive visualizations that make understanding data easier and more fun (in my opinion).\n-   Python, R, Julia, JavaScript, Dash and other languages can use the Plotly library.\n:::\n\n## What can it do in R? {background-color=\"pink\"}\n\n::: incremental\n-   Creating interactive web-based graphs\n-   Integrates with ggplot2 via ggplotly().\n-   Works well with Shiny for building web apps (relevant for us!).\n-   You can also export to HTML for sharing.\n:::\n\n::: footer\nLearn more: [All about Plotly :)](https://en.wikipedia.org/wiki/Plotly)\n:::\n\n## The Data I Chose {background-color=\"pink\"}\n\n::: incremental\n-   This data is called *Hospitals*\n    -   It shows all the Hospitals by city in the US\n-   We can see how important this data is!\n    -   You can see which places in the US have more hospitals and which do not.\n    -   This data could be used in numerous different ways. It also shows whether or not the hospital is a non-profit, a rehabilitation center etc...\n:::\n\n## An Important Graph to See {background-color=\"pink\"}\n\n[![Click the map to take you to the original article.](images/FT_18.11.27_HospitalDistance_feature3.webp){width=\"1911\"}](https://www.pewresearch.org/short-reads/2018/12/12/how-far-americans-live-from-the-closest-hospital-differs-by-community-type/)\n\n## Let's get into some code! {background-color=\"pink\"}\n\nThe basic code for a Plotly map\n\n```{r}\n# Load and clean hospital dataset\nHospitals <- read_csv(\"~/Downloads/Hospitals.csv\")\n\n# Clean names (optional but helpful)\nHospitals <- Hospitals |> \n  clean_names()\n```\n\n```{r}\n# Convert latitude/longitude to numeric and filter out invalid rows\nhospitals <- Hospitals |> \n  mutate(\n    latitude = suppressWarnings(as.numeric(latitude)),\n    longitude = suppressWarnings(as.numeric(longitude))\n  ) |> \n  filter(!is.na(latitude), !is.na(longitude), !is.na(name))\n```\n\n``` {.r code-line-numbers=\"1-15\"}\n# Create interactive Plotly map\nplot_ly(\n  data = hospitals,\n  type = 'scattergeo',\n  mode = 'markers',\n  lat = ~latitude,\n  lon = ~longitude,\n  text = ~paste0(\"<b>\", name, \"</b><br>City: \", city, \n  \"<br>State: \", state, \n  \"</b><br>Type of Hospital: \", type),\n  marker = list(\n    size = 4,\n    color = 'red',\n    opacity = 0.6\n  )\n```\n\n## Let's get into some code! {background-color=\"pink\"}\n\nNow, we add in the layered part!\n\n``` {.r code-line-numbers=\"13-24\"}\n# Create interactive Plotly map\nplot_ly(\n  data = hospitals,\n  type = 'scattergeo',\n  mode = 'markers',\n  lat = ~latitude,\n  lon = ~longitude,\n  text = ~paste0(\"<b>\", name, \"</b><br>City: \", city, \"<br>State: \", state, \"</b><br>Type of Hospital: \", type),\n  marker = list(\n    size = 4,\n    color = 'red',\n    opacity = 0.6\n  ) |> \n  layout(\n    title = \"Interactive Map of U.S. Hospitals\",\n    geo = list(\n      scope = 'usa',\n      projection = list(type = 'albers usa'),\n      showland = TRUE,\n      landcolor = \"rgb(229, 229, 229)\",\n      subunitcolor = \"rgb(255, 255, 255)\",\n      countrycolor = \"rgb(255, 255, 255)\"\n    )\n  )\n```\n\n## The map we created {background-color=\"pink\"}\n\n```{r, height=2000, width=2000}\n# Create interactive Plotly map\nplot_ly(\n  data = hospitals,\n  type = 'scattergeo',\n  mode = 'markers',\n  lat = ~latitude,\n  lon = ~longitude,\n  text = ~paste0(\"<b>\", name, \"</b><br>City: \", city, \"<br>State: \", state, \"</b><br>Type of Hospital: \", type),\n  marker = list(\n    size = 4,\n    color = 'red',\n    opacity = 0.6\n  )\n) |> \n  layout(\n    title = \"Interactive Map of U.S. Hospitals\",\n    geo = list(\n      scope = 'usa',\n      projection = list(type = 'albers usa'),\n      showland = TRUE,\n      landcolor = \"rgb(229, 229, 229)\",\n      subunitcolor = \"rgb(255, 255, 255)\",\n      countrycolor = \"rgb(255, 255, 255)\"\n    )\n  )\n\n```\n\n## Another example woot woot! {background-color=\"pink\"}\n\nSo now we have the map function that we did previosly, but my next question is: **Which US States have the most hospitals?!** Let's find out.\n\n``` {.r code-line-numbers=\"1-24\"}\n# Plot the bar chart of top 10 states by hospital count\nplot_ly(\n  data = state_hospital_counts,\n  x = ~reorder(state, hospital_count),\n  y = ~hospital_count,\n  type = 'bar',\n  marker = list(color = 'steelblue')\n) |>\n  layout(\n    title = \"Top 10 U.S. States by Number of Hospitals\",\n    xaxis = list(title = \"State\"),\n    yaxis = list(title = \"Number of Hospitals\"),\n    margin = list(b = 100),\n    hovermode = \"closest\"\n  )\n```\n\n```{r}\n# Create a table of hospital counts per state (Top 10)\nstate_hospital_counts <- hospitals |>\n  count(state, name = \"hospital_count\") |>\n  arrange(desc(hospital_count)) |>\n  slice_head(n = 10)\n```\n\n## What it looks like {background-color=\"pink\"}\n\n```{r}\n# Plot the bar chart of top 10 states by hospital count\nplot_ly(\n  data = state_hospital_counts,\n  x = ~reorder(state, hospital_count),\n  y = ~hospital_count,\n  type = 'bar',\n  marker = list(color = 'steelblue')\n) |>\n  layout(\n    title = \"Top 10 U.S. States by Number of Hospitals\",\n    xaxis = list(title = \"State\"),\n    yaxis = list(title = \"Number of Hospitals\"),\n    margin = list(b = 100),\n    hovermode = \"closest\"\n  )\n```\n\n## Wrapping it up... {background-color=\"pink\"}\n\n::: incremental\n-   Plotly is used for making interactive maps and charts\n-   Tooltip :)\n    -   A function where we can hover over a map or a visualization and see some more details about it.\n    -   You can also isolate regions for better understanding and more information.\n-   Also, healthcare and the ability to get it in a quick manner saves lives!\n:::\n\n## Thank You! {background-color=\"pink\"}\n![Data + Healthcare = An Informed Public](images/kaiser_final_265dcf20bf86bc91590c49e978b05b5a.jpg){fig-align=\"center\" width=\"346\"}\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"r_tip_of_the_day.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.5.57","auto-stretch":true,"editor":"visual","title":"R Tip of the Day","subtitle":"The Plotly Function (again)","author":"Ela Kanade","date":"May 13, 2025","editor_options":{"chunk_output_type":"console"},"slideNumber":true,"chalkboard":{"buttons":true},"previewLinks":"auto"}}},"projectFormats":["html"]}