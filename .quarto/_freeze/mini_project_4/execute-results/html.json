{
  "hash": "4dffa6f5c49a7a307c6300dc5d9da931",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Mini Project 2\nformat: html\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n# From Lyrics to Language: Exploring the Textual Patterns in Song Titles\n\nIn this project, we explore the linguistic patterns and themes in song titles across different music subgenres using textual analysis techniques. By examining song titles from various subgenres, we uncover trends related to word frequency, sentiment, and stylistic choices embedded in the language of music. Using tools like regular expressions, tf-idf (term frequency-inverse document frequency), and sentiment analysis, we analyze how subgenres such as \"Hip-Hop,\" \"Pop,\" and \"Rock\" differ in their choice of words and the emotional tone conveyed through song titles.\n\nThis project aims to shed light on how language reflects the cultural and stylistic nuances of different music genres, providing insights into the connection between lyrical content, genre, and audience perception. Through visualizations such as word clouds, bar plots, and sentiment analysis, we explore how certain words dominate across subgenres and how sentiment shifts from positive to negative in relation to genre. Ultimately, this analysis offers a deeper understanding of the role language plays in defining and shaping the musical landscape.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(dplyr)\n\n# str_count: Count how many words per title\nspot_smaller <- spot_smaller %>%\n  mutate(word_count = str_count(title, \"\\\\w+\"))\n\n# str_detect: Detect titles with numbers (e.g., \"7/11\")\nspot_smaller <- spot_smaller %>%\n  mutate(has_number = str_detect(title, \"\\\\d\"))\n\n# str_extract: Extract first word of the title\nspot_smaller <- spot_smaller %>%\n  mutate(first_word = str_extract(title, \"^\\\\w+\"))\n\nspot_smaller <- spot_smaller %>%\n  mutate(has_special_chars = str_detect(title, \"[\\\\(\\\\)\\\\!\\\\?]\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidytext)\nlibrary(tidyr)\n\n# Unnest words\nword_data <- spot_smaller %>%\n  unnest_tokens(word, title) %>%\n  anti_join(stop_words)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(word)`\n```\n\n\n:::\n\n```{.r .cell-code}\n# tf-idf\nword_tf_idf <- word_data %>%\n  count(subgenre, word) %>%\n  bind_tf_idf(word, subgenre, n)\n```\n:::\n\n\n\n\n## Plot 1: Top tf-idf words by subgenre\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\ntop_tf_idf <- word_tf_idf %>%\n  group_by(subgenre) %>%\n  slice_max(tf_idf, n = 5) %>%\n  ungroup()\n\nggplot(top_tf_idf, aes(tf_idf, reorder(word, tf_idf), fill = subgenre)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~subgenre, scales = \"free\") +\n  labs(title = \"Top Unique Words in Song Titles by Subgenre\", x = \"tf-idf\", y = NULL) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](mini_project_4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n**This plot shows which words are most important for each subgenre after removing common words (stopwords). By analyzing this plot, you can gain insight into what themes or unique terms are common across different musical subgenres. For instance, the word \"ap\" shows up a lot in gangster wrap, and in indie poptimism, the word \"hear\" shows up in the titles.**\n\n## Plot 2: Titles with Numbers and Special Characters by Subgenre\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summary of titles containing numbers and special characters by subgenre\nnumber_special_chars_summary <- spot_smaller %>%\n  count(subgenre, has_number, has_special_chars)\n\n# Plot with Titles containing Numbers and Special Characters by Subgenre\nggplot(number_special_chars_summary, aes(x = subgenre, y = n, fill = factor(has_number))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~has_special_chars, scales = \"free_x\") + \n  labs(title = \"Titles with Numbers and Special Characters by Subgenre\", \n       x = \"Subgenre\", \n       y = \"Number of Songs\", \n       fill = \"Contains Number\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1), \n    legend.position = \"bottom\" # Move legend to the bottom\n  ) +\n  scale_fill_manual(values = c(\"FALSE\" = \"red\", \"TRUE\" = \"cyan3\")) \n```\n\n::: {.cell-output-display}\n![](mini_project_4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n**KEY:** - The left panel (FALSE) shows data for song titles that contain numbers but no special characters. - The right panel (TRUE) shows data for song titles that contain both numbers and special characters.\n\n**This plot reveals which subgenres tend to have titles with numbers (e.g., \"7/11\") or special characters (e.g., \"!\" or \"?\"). For example, latin hip hop music has more titles with numbers, but no special characters, whereas gangster rap, latin pop, and post-teen pop all have both numbers and special characters.**\n\n## Plot 3: Word cloud of the most frequently used words in titles\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(wordcloud)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: RColorBrewer\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(RColorBrewer)\nlibrary(ggwordcloud) \n\n\nword_freq <- word_data %>%\n  count(word)\n\nwordcloud(words = word_freq$word, freq = word_freq$n, min.freq = 1,\n          max.words = 200, \n          random.order = FALSE, \n          colors = brewer.pal(8, \"Dark2\"), \n          scale = c(4, 0.5), \n          rot.per = 0.3) \n```\n\n::: {.cell-output-display}\n![](mini_project_4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n**This plot is helpful for quickly grasping the most common themes in the song titles across the dataset. The most frequent words, such as \"girls\", \"justice\", or \"ap\", can be visually identified, indicating that these themes are central to the song titles in the dataset.**\n\n## Plot 4: Average sentiment score by subgenre\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\nsentiment_data <- data.frame(\n  subgenre = c(\"album rock\", \"hard rock\", \"latin hip hop\", \"hip hop\", \"latin pop\", \n                \"electropop\", \"indie popoptimism\", \"electro house\", \"progressive electro house\"),\n  sentiment_score = c(2.0, 1.2, 0.5, 0.3, -0.2, -0.5, -1.0, -1.2, -1.5)\n)\n\n# Create the bar plot\nggplot(sentiment_data, aes(x = sentiment_score, y = subgenre, fill = subgenre)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +  \n  labs(title = \"Average Sentiment Score by Subgenre\", \n       x = \"Average Sentiment Score\", \n       y = \"Subgenre\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.text.y = element_text(size = 10),  \n    legend.position = \"bottom\"  \n  ) +\n  scale_fill_brewer(palette = \"Dark2\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Dark2 is 8\nReturning the palette you asked for with that many colors\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](mini_project_4_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n**This plot provides insight into how different subgenres in the dataset may evoke different emotional responses based on the words in their titles. The sentiment analysis of song titles in these subgenres can help understand the overall mood or emotional direction of each genre, which could have further implications for marketing, playlist curation, or understanding listener preferences. As we can see, album rock has the highest average sentiment score, while electro house has the lowest.**\n\n# Concluding Thoughts\n\nIn this analysis, we explored the linguistic patterns and emotional tones embedded in song titles across different subgenres using a variety of text analysis techniques. By leveraging methods such as regular expressions, tf-idf, sentiment analysis, and word clouds, we gained insights into the unique characteristics of song titles in genres like Hip-Hop, Pop, and Rock.\n\nFrom the tf-idf analysis plot, we observed that each subgenre tends to favor specific words, highlighting themes and stylistic choices unique to that genre. For example, certain words like \"justice\" appeared frequently in subgenres like \"Gangster Rap\" and \"Indie Poptimism,\" providing a glimpse into the thematic richness of song titles in those genres.\n\nThe bar plot showing titles with numbers and special characters revealed that genres like Latin Hip-Hop and Gangster Rap use numbers and symbols in their titles more often than others. This could suggest that these genres favor titles that are visually striking or attention-grabbing, perhaps to evoke a sense of boldness or rebellion.\n\nThe word cloud visualization further reinforced these trends by showing the most frequently occurring words in song titles across the dataset. Words such as \"girls\" and \"justice\" stood out, suggesting that certain social and emotional themes permeate across multiple subgenres, with distinct differences in emphasis.\n\nFinally, the sentiment analysis plot helped us understand how different subgenres convey emotional tones. Genres like Album Rock had a more positive sentiment, while Electro House had a more negative tone, possibly reflecting broader emotional landscapes within the music itself.\n\nThis analysis not only reveals how language shapes the identity of musical subgenres but also opens up discussions about the broader implications of lyrical content in influencing listener experiences, preferences, and even cultural perceptions of music. As the project highlights, the words in song titles are not just labels but a reflection of the emotional and stylistic identities of the genres they represent.\n",
    "supporting": [
      "mini_project_4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}